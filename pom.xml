<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.fau.</groupId>
	<artifactId>SPiCSim</artifactId>
	<version>1.0.0</version>
	
	<scm>
		<connection>scm:git:https://github.com/cmorty/spicsim.git</connection>
		<developerConnection>scm:git:file://${basedir}</developerConnection>
		<url>https://github.com/cmorty/spicsim</url>
		<tag>SPiCSim-1.0.0</tag>
	</scm>
	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
	</distributionManagement> 
	
	<dependencies>

		<dependency>
			<artifactId>avrora</artifactId>
			<groupId>avrora</groupId>
			<version>1.7.113</version>
		</dependency>

		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>2.11.0</version>
		</dependency>

		<dependency>
			<groupId>net.sf.jchart2d</groupId>
			<artifactId>jchart2d</artifactId>
			<version>3.3.2</version>
		</dependency>
		<dependency>
			<groupId>com.github.scopt</groupId>
			<artifactId>scopt_2.10</artifactId>
			<version>3.2.0</version>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>src</sourceDirectory>
		<resources>
			<resource>
				<directory>src</directory>
				<includes>
					<include>**/*.java</include>
					<include>**/*.scala</include>
				</includes>
			</resource>
		</resources>


		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<pushChanges>false</pushChanges>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.1.6</version>
				<executions>
					<execution>
						<id>compile</id>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
						<phase>compile</phase>
					</execution>
				</executions>
				<configuration>
					<scalaVersion>2.11.0</scalaVersion>
					<recompileMode>incremental</recompileMode>
					<useZincServer>true</useZincServer>
					<args>
						<arg>-unchecked</arg>
						<arg>-deprecation</arg>
						<arg>-explaintypes</arg>
						<arg>-feature</arg>
					</args>
				</configuration>

			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>de.fau.spicsim.Main</mainClass>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.1</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<finalName>${project.artifactId}-${project.version}-shaded</finalName>
							<minimizeJar>true</minimizeJar>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.wvengen</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<version>2.0.7</version>
				<executions>
					<execution>
						<!-- <phase>package</phase> -->
						<phase>none</phase>
						<goals>
							<goal>proguard</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<proguardVersion>4.10</proguardVersion>
					<obfuscate>false</obfuscate>
					<includeDependencyInjar>true</includeDependencyInjar>
					<injar>${project.build.finalName}.jar</injar>
					<outjar>${project.build.finalName}-proguard.jar</outjar>
					<outputDirectory>${project.build.directory}</outputDirectory>
					<options>
						<!-- see http://sourceforge.net/p/proguard/bugs/459/ -->
						<option>-optimizations !code/allocation/variable</option>
						<!-- <option>-dontoptimize</option> -->

						<option>-keep public class de.fau.spicsim.Main {
							public static void
							main(java.lang.String[]);
							}</option>
						<option>-keep public class scala.runtime.RichDouble**
						</option>
						<!-- Scala warnings must be ignored -->
						<option>-dontwarn scala.**</option>

						<!-- We don't use log4j for now -->
						<option>-dontwarn org.apache.log4j.**</option>
						<option>-dontwarn org.apache.log.**</option>

						<!-- No nice GUIs -->
						<option>-dontwarn com.jidesoft.plaf.aqua.**</option>
						<option>-dontwarn org.apache.avalon.framework.**</option>

						<!-- Seems like this can be ignored, too as we don't export anything -->
						<option>-dontwarn com.sun.image.codec.jpeg.**</option>



					</options>
					<libs>
						<lib>${java.home}/lib/rt.jar</lib>
						<lib>${java.home}/lib/jsse.jar</lib>
					</libs>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>net.sf.proguard</groupId>
						<artifactId>proguard-base</artifactId>
						<version>4.10</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.1,)
										</versionRange>
										<goals>
											<goal>
												copy-dependencies
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<repositories>
		<repository>
			<id>scala-tools.org</id>
			<name>Scala-tools Maven2 Repository</name>
			<url>http://scala-tools.org/repo-releases</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>scala-tools.org</id>
			<name>Scala-tools Maven2 Repository</name>
			<url>http://scala-tools.org/repo-releases</url>
		</pluginRepository>

	</pluginRepositories>


</project>
